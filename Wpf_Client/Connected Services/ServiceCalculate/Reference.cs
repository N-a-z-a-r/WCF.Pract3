//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wpf_Client.ServiceCalculate {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceCalculate.IServiceCalculate")]
    public interface IServiceCalculate {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalculate/Calculate", ReplyAction="http://tempuri.org/IServiceCalculate/CalculateResponse")]
        double Calculate(double a, double b, double c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalculate/Calculate", ReplyAction="http://tempuri.org/IServiceCalculate/CalculateResponse")]
        System.Threading.Tasks.Task<double> CalculateAsync(double a, double b, double c);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCalculateChannel : Wpf_Client.ServiceCalculate.IServiceCalculate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceCalculateClient : System.ServiceModel.ClientBase<Wpf_Client.ServiceCalculate.IServiceCalculate>, Wpf_Client.ServiceCalculate.IServiceCalculate {
        
        public ServiceCalculateClient() {
        }
        
        public ServiceCalculateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceCalculateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCalculateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCalculateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Calculate(double a, double b, double c) {
            return base.Channel.Calculate(a, b, c);
        }
        
        public System.Threading.Tasks.Task<double> CalculateAsync(double a, double b, double c) {
            return base.Channel.CalculateAsync(a, b, c);
        }
    }
}
